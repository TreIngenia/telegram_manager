function updateUserStatus(e){try{if(!e||!e.phone)return;const n=document.querySelector(`.user-card[data-phone="${e.phone}"]`);if(!n)return;const t=n.querySelector(".user-status");t&&(t.classList.remove("online","offline"),t.classList.add(e.connected?"online":"offline"))}catch(e){}}function addUser(){try{const e=document.getElementById("newUserPhone");if(!e)return;let n=e.value.trim();if(!n)return void showNotification("Errore","Inserisci un numero di telefono valido","danger");if(n=n.replace(/^\+/,"").replace(/\s/g,""),!/^\d+$/.test(n))return void showNotification("Errore","Il numero di telefono deve contenere solo cifre","danger");showSpinner("Aggiunta utente","Connessione a Telegram in corso..."),fetch("/api/users",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({phone:n})}).then((e=>e.json())).then((e=>{hideSpinner(),e.success?(showNotification("Successo","Utente aggiunto con successo","success"),window.location.reload()):"code_sent"===e.status?showVerificationCodeDialog(e.phone):"password_required"===e.status?show2FAPasswordDialog(e.phone):showNotification("Errore",e.message||"Errore durante l'aggiunta dell'utente","danger")})).catch((e=>{hideSpinner(),showNotification("Errore","Si è verificato un errore durante la connessione al server","danger")}))}catch(e){hideSpinner(),showNotification("Errore","Si è verificato un errore durante l'aggiunta dell'utente","danger")}}function removeUser(e){try{if(!e)return;showSpinner("Rimozione utente","Rimozione dell'utente in corso..."),fetch("/api/users",{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({phone:e})}).then((e=>e.json())).then((n=>{if(hideSpinner(),n.success){showNotification("Successo","Utente rimosso con successo","success");const n=document.querySelector(`.user-card[data-phone="${e}"]`);if(n){const e=n.closest(".col-md-4");e&&e.remove()}const t=document.getElementById("usersContainer");t&&!t.querySelector(".user-card")&&(t.innerHTML='<div class="alert alert-info">Nessun utente registrato</div>')}else showNotification("Errore",n.message||"Errore durante la rimozione dell'utente","danger")})).catch((e=>{hideSpinner(),showNotification("Errore","Si è verificato un errore durante la connessione al server","danger")}))}catch(e){hideSpinner(),showNotification("Errore","Si è verificato un errore durante la rimozione dell'utente","danger")}}function showVerificationCodeDialog(e){try{const n="verificationCodeModal";let t=document.getElementById(n);if(t){const n=t.querySelector("#verificationPhone");n&&(n.value=e)}else t=document.createElement("div"),t.id=n,t.className="modal fade",t.setAttribute("tabindex","-1"),t.setAttribute("aria-labelledby",`${n}Label`),t.setAttribute("aria-hidden","true"),t.innerHTML=`\n                <div class="modal-dialog">\n                    <div class="modal-content">\n                        <div class="modal-header">\n                            <h5 class="modal-title" id="${n}Label">Verifica Telegram</h5>\n                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n                        </div>\n                        <div class="modal-body">\n                            <p>Telegram ha inviato un codice di verifica al tuo numero ${e}.</p>\n                            <p>Inserisci il codice ricevuto:</p>\n                            <input type="text" class="form-control" id="verificationCode" placeholder="Codice" maxlength="5">\n                            <input type="hidden" id="verificationPhone" value="${e}">\n                        </div>\n                        <div class="modal-footer">\n                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annulla</button>\n                            <button type="button" class="btn btn-primary" id="submitVerificationCode">Verifica</button>\n                        </div>\n                    </div>\n                </div>\n            `,document.body.appendChild(t);const i=new bootstrap.Modal(t);i.show();const o=document.getElementById("submitVerificationCode");o&&o.addEventListener("click",(function(){const e=document.getElementById("verificationCode").value.trim(),n=document.getElementById("verificationPhone").value;e?(i.hide(),submitVerificationCode(n,e)):showNotification("Errore","Inserisci il codice di verifica","danger")}))}catch(e){showNotification("Errore","Si è verificato un errore durante la visualizzazione del dialog di verifica","danger")}}function show2FAPasswordDialog(e){try{const n="twoFAPasswordModal";let t=document.getElementById(n);if(t){const n=t.querySelector("#twoFAPhone");n&&(n.value=e)}else t=document.createElement("div"),t.id=n,t.className="modal fade",t.setAttribute("tabindex","-1"),t.setAttribute("aria-labelledby",`${n}Label`),t.setAttribute("aria-hidden","true"),t.innerHTML=`\n                <div class="modal-dialog">\n                    <div class="modal-content">\n                        <div class="modal-header">\n                            <h5 class="modal-title" id="${n}Label">Autenticazione a due fattori</h5>\n                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n                        </div>\n                        <div class="modal-body">\n                            <p>Il tuo account Telegram richiede l'autenticazione a due fattori.</p>\n                            <p>Inserisci la password 2FA:</p>\n                            <input type="password" class="form-control" id="twoFAPassword" placeholder="Password">\n                            <input type="hidden" id="twoFAPhone" value="${e}">\n                        </div>\n                        <div class="modal-footer">\n                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annulla</button>\n                            <button type="button" class="btn btn-primary" id="submitTwoFAPassword">Verifica</button>\n                        </div>\n                    </div>\n                </div>\n            `,document.body.appendChild(t);const i=new bootstrap.Modal(t);i.show();const o=document.getElementById("submitTwoFAPassword");o&&o.addEventListener("click",(function(){const e=document.getElementById("twoFAPassword").value.trim(),n=document.getElementById("twoFAPhone").value;e?(i.hide(),submitTwoFAPassword(n,e)):showNotification("Errore","Inserisci la password 2FA","danger")}))}catch(e){showNotification("Errore","Si è verificato un errore durante la visualizzazione del dialog 2FA","danger")}}function submitVerificationCode(e,n){try{showSpinner("Verifica codice","Verifica del codice in corso..."),fetch("/api/users/verify",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({phone:e,code:n})}).then((e=>e.json())).then((n=>{hideSpinner(),n.success?(showNotification("Successo","Utente verificato con successo","success"),window.location.reload()):"password_required"===n.status?show2FAPasswordDialog(e):showNotification("Errore",n.message||"Errore durante la verifica del codice","danger")})).catch((e=>{hideSpinner(),showNotification("Errore","Si è verificato un errore durante la connessione al server","danger")}))}catch(e){hideSpinner(),showNotification("Errore","Si è verificato un errore durante l'invio del codice di verifica","danger")}}function submitTwoFAPassword(e,n){try{showSpinner("Verifica password","Verifica della password in corso..."),fetch("/api/users/verify",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({phone:e,password:n})}).then((e=>e.json())).then((e=>{hideSpinner(),e.success?(showNotification("Successo","Utente verificato con successo","success"),window.location.reload()):showNotification("Errore",e.message||"Errore durante la verifica della password","danger")})).catch((e=>{hideSpinner(),showNotification("Errore","Si è verificato un errore durante la connessione al server","danger")}))}catch(e){hideSpinner(),showNotification("Errore","Si è verificato un errore durante l'invio della password 2FA","danger")}}function loadActiveUsers(){fetch("/api/users").then((e=>e.json())).then((e=>{updateActiveUsersList(e)})).catch((e=>{}))}function updateActiveUsersList(e){const n=document.getElementById("activeUsersContainer");if(!n)return;if(n.innerHTML="",0===e.length)return void(n.innerHTML='<div class="alert alert-info">Nessun utente attivo</div>');const t=document.createElement("div");t.className="row",e.forEach((e=>{const n=document.createElement("div");n.className="col-md-4 mb-3",n.innerHTML=`\n            <div class="card user-card">\n                <div class="card-header d-flex align-items-center">\n                    <div class="user-avatar">\n                        <i class="bi bi-person"></i>\n                    </div>\n                    <h5 class="card-title mb-0">${e.first_name} ${e.last_name||""}</h5>\n                    <div class="user-status ${e.connected?"online":"offline"}"></div>\n                </div>\n                <div class="card-body">\n                    <p class="card-text">\n                        <i class="bi bi-phone"></i> ${e.phone}<br>\n                        <i class="bi bi-person-badge"></i> ${e.username||"N/D"}\n                    </p>\n                </div>\n            </div>\n        `,t.appendChild(n)})),n.appendChild(t)}function showSpinner(e,n){const t="spinnerModal";let i=document.getElementById(t);i||(i=document.createElement("div"),i.id=t,i.className="modal fade",i.setAttribute("tabindex","-1"),i.setAttribute("data-bs-backdrop","static"),i.setAttribute("data-bs-keyboard","false"),i.innerHTML=`\n            <div class="modal-dialog modal-dialog-centered">\n                <div class="modal-content">\n                    <div class="modal-header">\n                        <h5 class="modal-title" id="${t}Title"></h5>\n                    </div>\n                    <div class="modal-body text-center">\n                        <div class="d-flex justify-content-center mb-3">\n                            <div class="spinner-border text-primary" role="status">\n                                <span class="visually-hidden">Caricamento...</span>\n                            </div>\n                        </div>\n                        <p id="${t}Message"></p>\n                    </div>\n                </div>\n            </div>\n        `,document.body.appendChild(i));const o=document.getElementById(`${t}Title`),a=document.getElementById(`${t}Message`);o&&(o.textContent=e||"Caricamento"),a&&(a.textContent=n||"Operazione in corso...");const r=new bootstrap.Modal(i);r.show(),window.currentSpinnerModal=r}function hideSpinner(){window.currentSpinnerModal&&(window.currentSpinnerModal.hide(),window.currentSpinnerModal=null)}window.addUser=addUser,window.removeUser=removeUser,window.loadActiveUsers=loadActiveUsers,window.updateUserStatus=updateUserStatus;