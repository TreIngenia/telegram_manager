function initBootstrapComponents(){try{var e=document.querySelectorAll('[data-bs-toggle="tooltip"]');e.length>0&&e.forEach((function(e){new bootstrap.Tooltip(e)}));var t=document.querySelectorAll('[data-bs-toggle="popover"]');t.length>0&&t.forEach((function(e){new bootstrap.Popover(e)}))}catch(e){}}function initSocketIO(){try{const e=io();window.socket=e,e.on("connect",(function(){updateSocketStatus("connected"),requestInitialUpdates()})),e.on("disconnect",(function(){updateSocketStatus("disconnected")})),e.on("connect_error",(function(e){updateSocketStatus("disconnected")})),e.on("update",(function(e){handleUpdate(e)})),e.on("monitor_started",(function(e){showNotification("Monitoraggio avviato",`Avviato monitoraggio per l'utente ${e.user_phone}`),updateMonitoringStatus(e)})),e.on("monitor_stopped",(function(e){showNotification("Monitoraggio fermato",`Fermato monitoraggio per l'utente ${e.user_phone}`),updateMonitoringStatus(e,!1)})),e.on("download_started",(function(e){showNotification("Download avviato",`Avviato download per il gruppo ${e.group_name}`),updateDownloadStatus(e)})),e.on("download_progress",(function(e){updateDownloadProgress(e)})),e.on("download_completed",(function(e){showNotification("Download completato",`Completato download per il gruppo ${e.group_name}`),updateDownloadStatus(e,"completed")})),e.on("download_error",(function(e){showNotification("Errore download",`Errore nel download per il gruppo: ${e.error}`,"danger"),updateDownloadStatus(e,"error")})),e.on("archive_started",(function(e){showNotification("Archiviazione avviata",`Avviata archiviazione per il gruppo ${e.group_name}`),updateArchiveStatus(e)})),e.on("archive_scanning",(function(e){updateArchiveProgress(e,"scanning")})),e.on("archive_progress",(function(e){updateArchiveProgress(e,"downloading")})),e.on("archive_completed",(function(e){showNotification("Archiviazione completata",`Completata archiviazione per il gruppo ${e.group_name}`),updateArchiveStatus(e,"completed")})),e.on("archive_error",(function(e){showNotification("Errore archiviazione",`Errore nell'archiviazione per il gruppo: ${e.error}`,"danger"),updateArchiveStatus(e,"error")})),e.on("private_media_saved",(function(e){showNotification("Media privato salvato",`Salvato media da ${e.sender}`),updateMediaStatus(e,"private")})),e.on("group_media_saved",(function(e){showNotification("Media di gruppo salvato",`Salvato media dal gruppo ${e.group_name}`),updateMediaStatus(e,"group")}))}catch(e){}}function updateSocketStatus(e){try{const t=document.getElementById("wsStatus");if(!t)return;switch(t.className="badge",e){case"connected":t.classList.add("bg-success"),t.textContent="Connesso";break;case"disconnected":t.classList.add("bg-danger"),t.textContent="Disconnesso";break;case"connecting":t.classList.add("bg-warning"),t.textContent="Connessione...";break;default:t.classList.add("bg-secondary"),t.textContent="Sconosciuto"}}catch(e){}}function requestInitialUpdates(){try{const e=document.querySelector(".user-card.selected");if(e){const t=e.dataset.phone;t&&window.socket&&window.socket.emit("request_updates",{user_phone:t})}}catch(e){}}function handleUpdate(e){try{if(!e||!e.type)return;switch(e.type){case"user_status":updateUserStatus(e.data);break;case"group_list":updateGroupList(e.data);break;case"monitor_status":updateMonitoringStatus(e.data);break;case"download_status":updateDownloadList(e.data);break;case"archive_status":updateArchiveList(e.data);break;default:}}catch(e){}}function updateUserStatus(e){try{if(!e||!e.phone)return;const t=document.querySelector(`.user-card[data-phone="${e.phone}"]`);if(!t)return;const n=t.querySelector(".user-status");n&&(n.classList.remove("online","offline"),n.classList.add(e.connected?"online":"offline"))}catch(e){}}function updateGroupList(e){try{const t=document.getElementById("groupsContainer");if(!t)return;if(t.innerHTML="",!e||0===e.length)return void(t.innerHTML='<div class="alert alert-info">Nessun gruppo trovato</div>');const n=document.createElement("div");n.className="row",e.forEach((e=>{const t=createGroupCard(e);n.appendChild(t)})),t.appendChild(n)}catch(e){}}function createGroupCard(e){try{if(!e||!e.id)return document.createElement("div");const t=document.createElement("div");t.className="col-md-4 mb-3",t.innerHTML=`\n            <div class="card group-card" data-group-id="${e.id}">\n                <div class="card-header d-flex align-items-center">\n                    <div class="group-icon">\n                        <i class="bi bi-${"channel"===e.entity_type?"broadcast":"people-fill"}"></i>\n                    </div>\n                    <h5 class="card-title mb-0">${e.title||"Gruppo senza nome"}</h5>\n                </div>\n                <div class="card-body">\n                    <p class="card-text">\n                        <small class="text-muted">\n                            ${e.members_count||0} membri\n                            ${e.unread_count>0?`<span class="badge bg-danger">${e.unread_count} non letti</span>`:""}\n                        </small>\n                    </p>\n                    <div class="d-grid gap-2">\n                        <button class="btn btn-sm btn-primary btn-monitor" data-group-id="${e.id}">\n                            <i class="bi bi-broadcast"></i> Monitora\n                        </button>\n                        <button class="btn btn-sm btn-success btn-download" data-group-id="${e.id}">\n                            <i class="bi bi-cloud-download"></i> Download\n                        </button>\n                        <button class="btn btn-sm btn-info btn-archive" data-group-id="${e.id}">\n                            <i class="bi bi-archive"></i> Archivia\n                        </button>\n                    </div>\n                </div>\n            </div>\n        `;const n=t.querySelector(".btn-monitor"),a=t.querySelector(".btn-download"),o=t.querySelector(".btn-archive");return n&&n.addEventListener("click",(function(){startMonitoring(this.dataset.groupId)})),a&&a.addEventListener("click",(function(){const e=this.dataset.groupId;startDownload(e)})),o&&o.addEventListener("click",(function(){const e=this.dataset.groupId;startArchive(e)})),t}catch(e){return document.createElement("div")}}function updateMonitoringStatus(e,t=!0){try{const n=document.getElementById("monitoringContainer");if(!n)return;if(t&&e&&e.user_phone){let t=document.querySelector(`.monitor-item[data-user="${e.user_phone}"]`);if(!t){t=document.createElement("div"),t.className="monitor-item card mb-3 fade-in",t.dataset.user=e.user_phone,n.appendChild(t);const a=n.querySelector(".alert.alert-info");a&&a.remove()}t.innerHTML=`\n                <div class="card-header d-flex justify-content-between align-items-center">\n                    <h5 class="mb-0">\n                        <i class="bi bi-broadcast"></i> Monitoraggio: ${e.user_phone}\n                    </h5>\n                    <button class="btn btn-sm btn-danger btn-stop-monitor" data-user="${e.user_phone}">\n                        <i class="bi bi-stop-circle"></i> Stop\n                    </button>\n                </div>\n                <div class="card-body">\n                    <p>Gruppi monitorati: ${e.group_ids&&e.group_ids.length||0}</p>\n                    <p>Avviato: ${new Date(e.timestamp||Date.now()).toLocaleString()}</p>\n                </div>\n            `;const a=t.querySelector(".btn-stop-monitor");a&&a.addEventListener("click",(function(){const e=this.dataset.user;stopMonitoring(e)}))}else if(!t&&e&&e.user_phone){const t=document.querySelector(`.monitor-item[data-user="${e.user_phone}"]`);t&&(t.classList.add("fade-out"),setTimeout((()=>{t.remove(),0===n.querySelectorAll(".monitor-item").length&&(n.innerHTML='<div class="alert alert-info">Nessun monitoraggio attivo</div>')}),500))}}catch(e){}}function updateDownloadStatus(e,t="in_progress"){try{if(!e||!e.task_id)return;const n=document.getElementById("downloadsContainer");if(!n)return;let a=document.querySelector(`.download-item[data-task-id="${e.task_id}"]`);if(!a){a=document.createElement("div"),a.className="download-item card mb-3 fade-in",a.dataset.taskId=e.task_id,n.appendChild(a);const t=n.querySelector(".alert.alert-info");t&&t.remove()}let o="",i="";switch(t){case"in_progress":o='<span class="badge bg-primary">In corso</span>',i='\n                    <div class="progress">\n                        <div class="progress-bar progress-bar-striped progress-bar-animated" \n                             role="progressbar" style="width: 0%" \n                             aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>\n                    </div>\n                    <p class="text-center mt-1">0/0 media scaricati</p>\n                ';break;case"completed":o='<span class="badge bg-success">Completato</span>',i=`\n                    <div class="progress">\n                        <div class="progress-bar bg-success" \n                             role="progressbar" style="width: 100%" \n                             aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">100%</div>\n                    </div>\n                    <p class="text-center mt-1">${e.downloaded_media||0}/${e.total_media||0} media scaricati</p>\n                `;break;case"error":o='<span class="badge bg-danger">Errore</span>',i=`\n                    <div class="alert alert-danger mt-2">\n                        ${e.error||"Si Ã¨ verificato un errore durante il download"}\n                    </div>\n                `;break}a.innerHTML=`\n            <div class="card-header d-flex justify-content-between align-items-center">\n                <h5 class="mb-0">\n                    <i class="bi bi-cloud-download"></i> Download: ${e.group_name||"Gruppo"}\n                </h5>\n                ${o}\n            </div>\n            <div class="card-body">\n                <p>Utente: ${e.user_phone||"N/D"}</p>\n                <p>Avviato: ${new Date(e.timestamp||e.start_time||Date.now()).toLocaleString()}</p>\n                ${i}\n            </div>\n        `}catch(e){}}function updateDownloadProgress(e){try{if(!e||!e.task_id)return;const t=document.querySelector(`.download-item[data-task-id="${e.task_id}"]`);if(!t)return;const n=t.querySelector(".progress-bar"),a=t.querySelector(".text-center");if(n){const t=e.progress||0;n.style.width=`${t}%`,n.setAttribute("aria-valuenow",t),n.textContent=`${t}%`}a&&(a.textContent=`${e.downloaded_media||0}/${e.total_media||0} media scaricati`)}catch(e){}}function updateArchiveStatus(e,t="in_progress"){try{if(!e||!e.task_id)return;const n=document.getElementById("archivesContainer");if(!n)return;let a=document.querySelector(`.archive-item[data-task-id="${e.task_id}"]`);if(!a){a=document.createElement("div"),a.className="archive-item card mb-3 fade-in",a.dataset.taskId=e.task_id,n.appendChild(a);const t=n.querySelector(".alert.alert-info");t&&t.remove()}let o="",i="";switch(t){case"in_progress":o='<span class="badge bg-primary">In corso</span>',i='\n                    <div class="progress">\n                        <div class="progress-bar progress-bar-striped progress-bar-animated" \n                             role="progressbar" style="width: 0%" \n                             aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>\n                    </div>\n                    <p class="text-center mt-1">Inizializzazione...</p>\n                ';break;case"completed":o='<span class="badge bg-success">Completato</span>',i=`\n                    <div class="progress">\n                        <div class="progress-bar bg-success" \n                             role="progressbar" style="width: 100%" \n                             aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">100%</div>\n                    </div>\n                    <p class="text-center mt-1">${e.archived_media||0}/${e.total_media||0} media archiviati</p>\n                `;break;case"error":o='<span class="badge bg-danger">Errore</span>',i=`\n                    <div class="alert alert-danger mt-2">\n                        ${e.error||"Si Ã¨ verificato un errore durante l'archiviazione"}\n                    </div>\n                `;break}a.innerHTML=`\n            <div class="card-header d-flex justify-content-between align-items-center">\n                <h5 class="mb-0">\n                    <i class="bi bi-archive"></i> Archivio: ${e.group_name||"Gruppo"}\n                </h5>\n                ${o}\n            </div>\n            <div class="card-body">\n                <p>Utente: ${e.user_phone||"N/D"}</p>\n                <p>Avviato: ${new Date(e.timestamp||e.start_time||Date.now()).toLocaleString()}</p>\n                ${i}\n            </div>\n        `}catch(e){}}function updateArchiveProgress(e,t){try{if(!e||!e.task_id)return;const n=document.querySelector(`.archive-item[data-task-id="${e.task_id}"]`);if(!n)return;const a=n.querySelector(".progress-bar"),o=n.querySelector(".text-center");if(a){const t=e.progress||0;a.style.width=`${t}%`,a.setAttribute("aria-valuenow",t),a.textContent=`${t}%`}o&&(o.textContent="scanning"===t?`Scansione messaggi: ${e.processed_messages||0}/${e.total_messages||0}`:`${e.archived_media||0}/${e.total_media||0} media archiviati`)}catch(e){}}function updateMediaStatus(e,t){try{"private"===t?(appendToMessageLog(`Media privato ricevuto: ${e.media_type} da ${e.sender}`),appendToMediaGrid(e)):"group"===t&&(appendToMessageLog(`Media di gruppo ricevuto: ${e.media_type} da ${e.group_name}`),appendToMediaGrid(e))}catch(e){}}function appendToMessageLog(e){try{const t=document.getElementById("recentMessagesContainer");if(!t)return;const n=t.querySelector(".text-center.text-muted");n&&n.remove();const a=document.createElement("div");a.textContent=`[${(new Date).toLocaleTimeString()}] ${e}`,t.appendChild(a),t.scrollTop=t.scrollHeight;const o=document.getElementById("recentMessagesSection");o&&(o.style.display="block")}catch(e){}}function appendToMediaGrid(e){try{const t=document.getElementById("recentMediaContainer");if(!t)return;const n=document.createElement("div");n.className="media-item","immagini"===e.media_type||"image"===e.media_type?n.innerHTML=`\n                <img src="/media/${e.path}" alt="Immagine">\n                <div class="media-info">\n                    <small>${(new Date).toLocaleTimeString()}</small>\n                    <p class="mb-0">${e.sender||e.group_name||"Sconosciuto"}</p>\n                </div>\n            `:"video"===e.media_type?n.innerHTML=`\n                <video controls>\n                    <source src="/media/${e.path}" type="video/mp4">\n                    Il tuo browser non supporta il tag video.\n                </video>\n                <div class="media-info">\n                    <small>${(new Date).toLocaleTimeString()}</small>\n                    <p class="mb-0">${e.sender||e.group_name||"Sconosciuto"}</p>\n                </div>\n            `:n.innerHTML=`\n                <div class="media-placeholder">\n                    <i class="bi bi-file-earmark"></i>\n                </div>\n                <div class="media-info">\n                    <small>${(new Date).toLocaleTimeString()}</small>\n                    <p class="mb-0">${e.sender||e.group_name||"Sconosciuto"}</p>\n                </div>\n            `,t.appendChild(n);const a=document.getElementById("recentMediaSection");a&&(a.style.display="block")}catch(e){}}function startMonitoring(e){try{if(!e)return;Array.isArray(e)||(e=[e]);const t=document.getElementById("monitorUserPhone");if(!t)return void showNotification("Errore","Seleziona un utente per il monitoraggio","danger");t.value.trim()||document.addEventListener("DOMContentLoaded",(function(){initApp()}))}catch(e){}}function initApp(){initBootstrapComponents(),initSocketIO(),initSettings(),initUIEventHandlers(),initNotifications(),loadPageSpecificScripts()}function loadPageSpecificScripts(){switch(window.location.pathname){case"/":initDashboardPage();break;case"/users":initUsersPage();break;case"/groups":initGroupsPage();break;case"/monitor":initMonitorPage();break;case"/download":initDownloadPage();break;case"/archive":initArchivePage();break;case"/logs":initLogsPage();break}}function initLogsPage(){const e=document.getElementById("logFileSelect");e&&e.addEventListener("change",(function(){const e=this.value;if(e){const t=new URL(window.location.href);t.searchParams.set("file",e),window.history.replaceState({},"",t),loadLogContent(e)}}));const t=document.getElementById("logFilter");t&&t.addEventListener("input",(function(){filterLogContent(this.value)}));const n=document.getElementById("refreshLogBtn");n&&n.addEventListener("click",(function(){const e=document.getElementById("logFileSelect");e&&e.value&&loadLogContent(e.value)}));const a=document.getElementById("downloadLogBtn");a&&a.addEventListener("click",(function(){const e=document.getElementById("logFileSelect");e&&e.value&&downloadLogFile(e.value)}));const o=new URLSearchParams(window.location.search).get("file");o&&(e&&(e.value=o),loadLogContent(o))}function loadLogContent(e){const t=document.getElementById("logViewer");t&&(t.innerHTML='\n            <div class="spinner-container">\n                <div class="spinner-border text-light" role="status">\n                    <span class="visually-hidden">Caricamento...</span>\n                </div>\n            </div>\n        '),fetch(`/api/logs/${e}`).then((e=>e.json())).then((e=>{if(e.success){if(t){t.innerHTML=`<pre>${e.content.join("")}</pre>`;const n=document.getElementById("logFilter");n&&n.value&&filterLogContent(n.value),t.scrollTop=t.scrollHeight}}else t&&(t.innerHTML=`\n                        <div class="alert alert-danger">\n                            Errore nel caricamento del file di log: ${e.error||"Errore sconosciuto"}\n                        </div>\n                    `)})).catch((e=>{t&&(t.innerHTML=`\n                    <div class="alert alert-danger">\n                        Errore nel caricamento del file di log: ${e.message}\n                    </div>\n                `)}))}function filterLogContent(e){const t=document.getElementById("logViewer"),n=t?t.querySelector("pre"):null;if(!n)return;if(!e)return n.querySelectorAll("span").forEach((e=>{e.style.display=""})),void(n.dataset.originalContent&&(n.innerHTML=n.dataset.originalContent,delete n.dataset.originalContent));n.dataset.originalContent||(n.dataset.originalContent=n.innerHTML);const a=n.dataset.originalContent.split("\n").map((t=>t.toLowerCase().includes(e.toLowerCase())?`<span class="log-highlight">${t}</span>`:`<span class="log-hidden">${t}</span>`));n.innerHTML=a.join("\n"),n.querySelectorAll(".log-hidden").forEach((e=>{e.style.display="none"}))}function downloadLogFile(e){const t=`/api/logs/${e}/download`,n=document.createElement("a");n.href=t,n.download=e,n.style.display="none",document.body.appendChild(n),n.click(),document.body.removeChild(n)}function initDashboardPage(){loadDashboardStats(),loadActiveUsers(),loadActiveMonitors(),loadActiveDownloads(),setInterval((function(){loadDashboardStats(),loadActiveUsers(),loadActiveMonitors(),loadActiveDownloads()}),3e4)}function loadDashboardStats(){fetch("/api/dashboard/stats").then((e=>e.json())).then((e=>{e.success&&updateDashboardStats(e.stats)})).catch((e=>{}))}function updateDashboardStats(e){document.getElementById("usersCount").textContent=e.users_count||0,document.getElementById("groupsCount").textContent=e.groups_count||0,document.getElementById("monitorCount").textContent=e.monitors_count||0,document.getElementById("downloadCount").textContent=e.downloads_count||0,document.getElementById("archiveCount").textContent=e.archives_count||0,document.getElementById("totalMedia").textContent=formatNumber(e.total_media||0),document.getElementById("totalImages").textContent=formatNumber(e.total_images||0),document.getElementById("totalVideos").textContent=formatNumber(e.total_videos||0),document.getElementById("totalSize").textContent=formatBytes(e.total_size||0)}function formatNumber(e){return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,".")}function formatBytes(e,t=2){if(0===e)return"0 Bytes";const n=t<0?0:t,a=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,a)).toFixed(n))+" "+["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"][a]}function loadActiveUsers(){fetch("/api/users").then((e=>e.json())).then((e=>{updateActiveUsersList(e)})).catch((e=>{}))}function updateActiveUsersList(e){const t=document.getElementById("activeUsersContainer");if(!t)return;if(t.innerHTML="",0===e.length)return void(t.innerHTML='<div class="alert alert-info">Nessun utente attivo</div>');const n=document.createElement("div");n.className="row",e.forEach((e=>{const t=document.createElement("div");t.className="col-md-4 mb-3",t.innerHTML=`\n            <div class="card user-card">\n                <div class="card-header d-flex align-items-center">\n                    <div class="user-avatar">\n                        <i class="bi bi-person"></i>\n                    </div>\n                    <h5 class="card-title mb-0">${e.first_name} ${e.last_name||""}</h5>\n                    <div class="user-status ${e.connected?"online":"offline"}"></div>\n                </div>\n                <div class="card-body">\n                    <p class="card-text">\n                        <i class="bi bi-phone"></i> ${e.phone}<br>\n                        <i class="bi bi-person-badge"></i> ${e.username||"N/D"}\n                    </p>\n                </div>\n            </div>\n        `,n.appendChild(t)})),t.appendChild(n)}function loadActiveMonitors(){fetch("/api/monitor/active").then((e=>e.json())).then((e=>{e.success&&updateActiveMonitorsList(e.monitors)})).catch((e=>{}))}function updateActiveMonitorsList(e){const t=document.getElementById("activeMonitorsContainer");if(t)if(t.innerHTML="",0!==Object.keys(e).length)for(const[n,a]of Object.entries(e)){const e=document.createElement("div");e.className="card mb-3",e.innerHTML=`\n            <div class="card-header d-flex justify-content-between align-items-center">\n                <h5 class="mb-0">\n                    <i class="bi bi-broadcast"></i> ${n}\n                </h5>\n                <button class="btn btn-sm btn-danger btn-stop-monitor" data-user="${n}">\n                    <i class="bi bi-stop-circle"></i> Stop\n                </button>\n            </div>\n            <div class="card-body">\n                <p>Gruppi monitorati: ${a.length}</p>\n            </div>\n        `;const o=e.querySelector(".btn-stop-monitor");o&&o.addEventListener("click",(function(){const e=this.dataset.user;stopMonitoring(e)})),t.appendChild(e)}else t.innerHTML='<div class="alert alert-info">Nessun monitoraggio attivo</div>'}function loadActiveDownloads(){fetch("/api/download/active").then((e=>e.json())).then((e=>{e.success&&updateActiveDownloadsList(e.downloads)})).catch((e=>{}))}function updateActiveDownloadsList(e){const t=document.getElementById("activeDownloadsContainer");if(t)if(t.innerHTML="",0!==Object.keys(e).length)for(const[n,a]of Object.entries(e)){const e=document.createElement("div");e.className="card mb-3",e.innerHTML=`\n            <div class="card-header d-flex justify-content-between align-items-center">\n                <h5 class="mb-0">\n                    <i class="bi bi-cloud-download"></i> ${a.group_name}\n                </h5>\n                <span class="badge ${"completed"===a.status?"bg-success":"error"===a.status?"bg-danger":"bg-primary"}">\n                    ${"completed"===a.status?"Completato":"error"===a.status?"Errore":"In corso"}\n                </span>\n            </div>\n            <div class="card-body">\n                <p>Utente: ${a.user_phone}</p>\n                <p>Avviato: ${new Date(a.start_time).toLocaleString()}</p>\n                <div class="progress">\n                    <div class="progress-bar ${"completed"===a.status?"bg-success":"error"===a.status?"bg-danger":"progress-bar-striped progress-bar-animated"}" \n                         role="progressbar" style="width: ${a.progress}%" \n                         aria-valuenow="${a.progress}" aria-valuemin="0" aria-valuemax="100">${a.progress}%</div>\n                </div>\n                <p class="text-center mt-1">${a.downloaded_media||0}/${a.total_media||0} media ${"completed"===a.status?"scaricati":"scaricati finora"}</p>\n            </div>\n        `,t.appendChild(e)}else t.innerHTML='<div class="alert alert-info">Nessun download in corso</div>'}function initUsersPage(){const e=document.getElementById("addUserBtn");e&&e.addEventListener("click",addUser);document.querySelectorAll(".btn-remove-user").forEach((e=>{e.addEventListener("click",(function(){const e=this.dataset.phone;showConfirmationModal("Rimuovere utente",`Sei sicuro di voler rimuovere l'utente ${e}?`,(()=>removeUser(e)))}))}))}document.addEventListener("DOMContentLoaded",(function(){initBootstrapComponents(),initSocketIO(),initSettings(),initUIEventHandlers(),initNotifications(),loadPageSpecificScripts()}));